<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.su.mapper.EmployeeMapper">
	
	<!-- 《员工与部门相关联》 -->
	<resultMap type="com.su.domain.Employee" id="EmployeeWithDept">
		<id column="employeeId" property="employeeId"/>
		<result column="deptId" property="deptId"/>
		<result column="jobId" property="jobId"/>
		<result column="employeeName" property="employeeName"/>
		<result column="employeeCardId" property="employeeCardId"/>
		<result column="employeeAddress" property="employeeAddress"/>
		<result column="employeePostCode" property="employeePostCode"/>
		<result column="employeePhone" property="employeePhone"/>
		<result column="employeeQQ" property="employeeQQ"/>
		<result column="employeeEmail" property="employeeEmail"/>
		<result column="employeeSex" property="employeeSex"/>
		<result column="employeeParty" property="employeeParty"/>
		<result column="employeeBirthday" property="employeeBirthday"/>
		<result column="employeeRace" property="employeeRace"/>
		<result column="employeeEducation" property="employeeEducation"/>
		<result column="employeeHobby" property="employeeHobby"/>
		<result column="employeeCreateDate" property="employeeCreateDate"/>
		<association property="dept" javaType="com.su.domain.Dept">
			<id column="deptId" property="deptId"/>
			<result column="deptName" property="deptName"/>
			<result column="deptDesc" property="deptDesc"/>
		</association>
		
	</resultMap>
	
	<!-- 《员工与职业相关联 》“继承”《员工与部门相关联》 -->
	<resultMap type="com.su.domain.Employee" id="EmployeeWithJobExtendDept" extends="EmployeeWithDept">
		<collection property="job" ofType="com.su.domain.Job">
			<id column="jobId" property="jobId"/>
			<result column="jobName" property="jobName"/>
			<result column="jobDesc" property="jobDesc"/>
		</collection>
	</resultMap>
	
	
	<!-- 员工、部门、职位 -->
	<select id="findEmployeeWithJobExtendDept" resultMap="EmployeeWithJobExtendDept">
		select employeeTable.*,jobTable.jobName,deptTable.deptName
		from employeeTable,jobTable,deptTable
		where  employeeTable.jobId = jobTable.jobId
				and employeeTable.deptId = deptTable.deptId
	</select>
	
	<!-- 根据id删除员工 -->
	<delete id="deleteEmployeeById" parameterType="java.lang.Integer">
		delete from employeeTable where employeeId = #{employeeId}
	</delete>
	
	<!-- 根据id 查找员工 -->
	<select id="findEmployeeById" parameterType="java.lang.Integer" resultType="employee">
		select * from employeeTable where employeeId = #{employeeId}
	</select>
	
	<!-- 更新员工 -->
	<update id="updateEmployee" parameterType="employee">
		update employeeTable
		set employeeName = #{employeeName},employeeCardId = #{employeeCardId},deptId = #{deptId},jobId = #{jobId},employeeAddress = #{employeeAddress},
		    employeePostCode = #{employeePostCode},employeePhone = #{employeePhone},employeeQQ = #{employeeQQ},
		    employeeEmail = #{employeeEmail},employeeSex = #{employeeSex},employeeParty = #{employeeParty},
		    employeeBirthday = #{employeeBirthday},employeeRace = #{employeeRace},employeeEducation = #{employeeEducation},
		    employeeHobby = #{employeeHobby}
		where employeeId = #{employeeId}
	</update>
	
	<!-- 新增员工 -->
	<insert id="addEmployee" parameterType="employee">
		<selectKey keyProperty="employeeId" order="BEFORE" resultType="java.lang.Integer">
			SELECT employee_seq.nextval from dual
		</selectKey>
		insert into employeeTable values(#{employeeId},#{deptId},#{jobId},#{employeeName},#{employeeCardId},#{employeeAddress},#{employeePostCode},
										#{employeePhone},#{employeeQQ},#{employeeEmail},#{employeeSex},#{employeeParty},#{employeeBirthday},#{employeeRace},
										#{employeeEducation},#{employeeHobby},#{employeeCreateDate})
	</insert>
	
	
	
	
	
	
	
	
	
	
	
	
</mapper>
